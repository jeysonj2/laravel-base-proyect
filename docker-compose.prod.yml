services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile.prod
    container_name: laravel_app
    working_dir: /var/www/html
    volumes:
      - ./storage:/var/www/html/storage
      - ./vendor/swagger-api:/var/www/html/vendor/swagger-api
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
      - ./.env:/var/www/html/.env
    networks:
      - laravel
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - .env
    environment:
      APP_ENV: production
      APP_DEBUG: "false"
      APP_URL: ${APP_URL:-https://my-laravel-base-project.test}
      APP_DOMAIN: ${APP_DOMAIN:-my-laravel-base-project.test}
      ACME_EMAIL: ${ACME_EMAIL:-youremail@example.com}
    hostname: app

  webserver:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile.prod
    container_name: laravel_webserver
    volumes:
      - ./public:/var/www/html/public:ro
      - ./vendor/swagger-api:/var/www/html/vendor/swagger-api:ro
      - ./docker/nginx/conf.d/http.conf:/etc/nginx/conf.d/templates/http.conf:ro
      - ./docker/nginx/conf.d/https.conf:/etc/nginx/conf.d/templates/https.conf:ro
      - ./docker/nginx/start-nginx.sh:/start-nginx.sh:ro
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    ports:
      - "${HTTP_PORT:-80}:${HTTP_PORT:-80}"
    networks:
      - laravel
    depends_on:
      - app
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - APP_DOMAIN=${APP_DOMAIN:-my-laravel-base-project.test}
      - HTTP_PORT=${HTTP_PORT:-80}
      - HTTP_ONLY=${HTTP_ONLY:-no}
    command: sh /start-nginx.sh

  db:
    image: postgres:17
    container_name: laravel_db
    environment:
      POSTGRES_USER: ${DB_USERNAME:-laravel_production}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-strong_password_here}
      POSTGRES_DB: ${DB_DATABASE:-laravel_production}
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks:
      - laravel
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-laravel_production}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    env_file:
      - .env

  # SMTP service for email delivery in production
  mailserver:
    image: bytemark/smtp
    container_name: laravel_smtp
    networks:
      - laravel
    restart: unless-stopped

networks:
  laravel:
    driver: bridge

volumes:
  dbdata:
    driver: local
  certbot-etc:
    driver: local
  certbot-var:
    driver: local
  web-root:
    driver: local
